<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About message" xml:space="preserve">
    <value>&lt;img src='\images\announce\Our_Goals_EN.png' width='720' height='405'&gt;&lt;/img&gt;

Goal of Operation ACA: 
Intended audience: Japanese Agency of Cultural Affairs (ACA), 文化庁 ; Ministry of Economy, Trade and Industry (METI) 経済産業省 ; 知的財産戦略推進事務局（Cool Japan） ; Japanese Consumer Affairs Agency (CAA), 消費者庁

We hope to explain the current state of affairs to the respective Japanese Government Departments to obtain awareness on the situation regarding the replacement of Director Tatsuki from the Kemono Friends Project. This incident has caused an uproar in countries outside of Japan, and given that the Cool Japan's policy to promote Japanese cultural products worldwide (which ACA &amp; METI is responsible for), our voices of concern should cause these organizations to consider the seriousness of the matter. Additionally, consumers who have purchased products which are related to Kemono Friends have a right to contact the CAA to comment on this matter as the CAA is obliged to protect consumer interests. 

Join us:
We will make a webpage (still in construction)  to randomly generate a letter template for you to send to ACA, METI &amp; Cool Japan, and each letter is different from another. The message to CAA will be in unified in Japanese.
For more information: 
&lt;a href='https://docs.google.com/document/d/1eHw_hUjxa0yZ1W4kTLUv1OMIpDOsPavP9XW55K4OSr4/edit?usp=sharing'&gt;https://docs.google.com/document/d/1eHw_hUjxa0yZ1W4kTLUv1OMIpDOsPavP9XW55K4OSr4/edit?usp=sharing&lt;/a&gt;

The webpage will be online soon. 
You can join us in other ways:
SaveJapariPark Discord server: &lt;a href='https://discord.gg/pPJFRsH'&gt;https://discord.gg/pPJFRsH&lt;/a&gt;
Homepage: &lt;a href='https://www.savejaparipark.com'&gt;www.savejaparipark.com&lt;/a&gt;
Twitter: @SaveJapariPark  
(Discord is a free, no-ad, secured communication tool, which only need an e-mail address to sign up)

&lt;br/&gt;&lt;br/&gt;

We are the Save Japari Park Team, with members from all over the world. 

Our group's goal is to bring light to the matter of KADOKAWA Corporation's decision to let off Director Tatsuki and Yaoyorozu Co.,Ltd. from the Kemono Friends Project.

We are currently organizing a large scale petition by sending email from countries all over the world. The target of this petition is KADOKAWA Corporation and their associated parties, such as  Crunchyroll, TV Tokyo &amp; etc. We will do our best to request these parties to make a public statement on this matter and convince their business partner, KADOKAWA Corporation, to bring back Director Tatsuki.

We currently have a website to automatically generate email templates to the relevant parties with convenient access to your email account; all that is required is your name and country. We have more plans for the future as well, and we hope that Friends from all over the world can join us in our efforts to save our Japari Park.</value>
  </data>
  <data name="About Title" xml:space="preserve">
    <value>Let’s rescue director Tatsuki from the claws of Cerulean!</value>
  </data>
  <data name="News Content" xml:space="preserve">
    <value>Please spread the following:

[Sign event for Yaoyorozu from Friends around the World!]  Start!

3 steps of the activity:
1. Write something encouraging to the studio which was responsible for animating Kemono Friends, 
Yaoyorozu. Please include your name or nickname, and where you come from.

2. Post the picture on Twitter with the 3 following tags:
　#世界Friends應援ヤオヨロズ
　#Love_the_park
　#けものフレンズ　

3. Add a tag showing where you are from:
　#Japan_Friends
　#American_Friends
　#Taiwan_Friends

This activity will recreate the signatures from everyone into a film!
We have confirmed that 37 countries will participate!</value>
  </data>
</root>