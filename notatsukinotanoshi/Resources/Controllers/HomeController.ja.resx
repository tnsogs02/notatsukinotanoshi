<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About message" xml:space="preserve">
    <value>&lt;img src='\images\announce\Our_Goals_JA.jpg' width='720' height='405'&gt;&lt;/img&gt;

ACA行動の目的：
私達の望みは日本政府へ状況を説明し、私達が問題視している事項について十分重視してもらうことです。文化庁、経済産業省によるCool Japan政策の目的は日本の魅力や文化などを世界中へ普及促進することを目指しており、この事件は今海外でその目的に大きな影響を与えているため、私たちの声は、日本政府に事件の重要さを真剣に検討させるでしょう。そして消費者庁には消費者の利益を守る義務があります。この事件が起こる以前にけものフレンズの関連商品を購入し、利益が損なわれている消費者は、消費者庁の対応を求める権利があります。


ACA 行動に参加する：
私たちは文化庁やクールジャパン計画、消費者庁へのメッセージを送りやすいように、いくつかのテンプレートを使ってメールを作るウェブシステムを作成中です。

行動とウェブサイトについての新しい情報は以下のところで確認できます。
わたしたちの Discord サーバー：&lt;a href='https://discord.gg/pPJFRsH'&gt;https://discord.gg/pPJFRsH&lt;/a&gt;
ツイッター：@SaveJapariPark  
HP：&lt;a href='https://www.savejaparipark.com'&gt;www.savejaparipark.com&lt;/a&gt;
（Discordアカウントの作成は、メールとパスワードのみ、チェックメールや個人情報は不要、無料、広告なし）

詳しく説明は：&lt;a href='https://docs.google.com/document/d/1eHw_hUjxa0yZ1W4kTLUv1OMIpDOsPavP9XW55K4OSr4/edit?usp=sharing'&gt;https://docs.google.com/document/d/1eHw_hUjxa0yZ1W4kTLUv1OMIpDOsPavP9XW55K4OSr4/edit?usp=sharing&lt;/a&gt;

&lt;br/&gt;&lt;br/&gt;

当サイトは、「ジャパリパークを救う会」のウェブサイトです。

世界中のフレンズがジャパリパークを救う一員として、集まってできました。　

我々の目標は、KFPA（けものフレンズプロジェクトA）がたつき監督と(株)ヤオヨロズを降板させた問題について事実を究明し、たつき監督がKFPAに復帰出来る環境を作る事です。

そこで私たちは、現在世界中の国から電子メールを送ってもらうことで、(株)KADOKAWAとその関連企業への大規模な請願運動を行っています。

それは例えば、(株)Crunchyrollや(株)UFI FUTECH(旧社名:(株)ファミマ・ドット・コム)、(株)テレビ東京などです。

これらの企業が今回の事件に対して公式声明を発表し、KFPAのライセンス窓口であるKADOKAWAにたつき監督を呼び戻すために働きかけるよう、全力を尽くします。

そのために、皆さんが関連企業にメールを送りやすくなるようにするために、名前と国籍を入力してもらうだけで自動でテンプレートが生成されるウェブサイトを用意しました。

最後に、我々は既にジャパリパークを救うために他にも様々な計画を立て、努力を続けていますが、世界中のより多くのフレンズが、私たちの活動の仲間入りをしてくれることを願っています。</value>
  </data>
  <data name="About Title" xml:space="preserve">
    <value>フレンズの皆さん、セルリアンからたつき監督を助けましょう！
けもフレ陳情をご一緒に！</value>
  </data>
  <data name="News Content" xml:space="preserve">
    <value>フォロワーに拡散よろしくお願いします：

世界のフレンズのみんな、ヤオヨロズ応援署名運動はじまるよ！

投稿までの3ステップ：

1. けものフレンズを作ったスタジオ、ヤオヨロズを応援するメッセージを書きましょう。
　署名(ハンドルネーム可)とあなたの国名を添えてください。

2. 書いた署名の画像と、以下の3つのハッシュタグをつけて投稿してください。
　#世界Friends應援ヤオヨロズ
　#Love_the_park
　#けものフレンズ

3. あなたの国名を示すハッシュタグも追加して、投稿してください。　
　#Japan_Friends
　#American_Friends
　#Taiwan_Friends

みなさんの署名から動画を作成する予定です！
既に37ヶ国からのフレンズが参加決定しています！</value>
  </data>
</root>